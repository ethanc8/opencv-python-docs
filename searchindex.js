Search.setIndex({"docnames": ["cv2.aruco", "cv2.dnn", "index"], "filenames": ["cv2.aruco.md", "cv2.dnn.md", "index.md"], "titles": ["<code class=\"docutils literal notranslate\"><span class=\"pre\">cv2.aruco</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cv2.dnn</span></code>", "OpenCV Python API"], "terms": {"none": [0, 1], "corner_refine_apriltag": 0, "int": [0, 1], "corner_refine_contour": 0, "corner_refine_non": 0, "corner_refine_subpix": 0, "dict_4x4_100": 0, "dict_4x4_1000": 0, "dict_4x4_250": 0, "dict_4x4_50": 0, "dict_5x5_100": 0, "dict_5x5_1000": 0, "dict_5x5_250": 0, "dict_5x5_50": 0, "dict_6x6_100": 0, "dict_6x6_1000": 0, "dict_6x6_250": 0, "dict_6x6_50": 0, "dict_7x7_100": 0, "dict_7x7_1000": 0, "dict_7x7_250": 0, "dict_7x7_50": 0, "dict_apriltag_16h5": 0, "dict_apriltag_25h9": 0, "dict_apriltag_36h10": 0, "dict_apriltag_36h11": 0, "dict_aruco_mip_36h12": 0, "dict_aruco_origin": 0, "arucodetector": 0, "detectmark": 0, "imag": [0, 1], "corner": 0, "id": [0, 1], "rejectedimgpoint": 0, "basic": 0, "marker": 0, "detect": [0, 1], "perform": [0, 1], "input": [0, 1], "onli": [0, 1], "includ": [0, 1], "specif": [0, 1], "dictionari": 0, "ar": [0, 1], "search": [0, 1], "For": [0, 1], "each": [0, 1], "return": [0, 1], "2d": [0, 1], "posit": 0, "its": [0, 1], "correspond": [0, 1], "identifi": [0, 1], "note": [0, 1], "thi": [0, 1], "doe": [0, 1], "pose": 0, "estim": [0, 1], "The": [0, 1], "correct": [0, 1], "len": 0, "distort": 0, "take": [0, 1], "account": 0, "It": [0, 1], "": [0, 1], "recommend": 0, "undistortinput": 0, "camera": 0, "model": [0, 1], "paramet": [0, 1], "known": 0, "see": [0, 1], "also": [0, 1], "undistort": 0, "estimateposesinglemark": 0, "estimateposeboard": 0, "self": [0, 1], "type": [0, 1], "matlik": [0, 1], "_type": [0, 1], "sequenc": [0, 1], "vector": [0, 1], "four": 0, "cornersar": 0, "provid": [0, 1], "e": [0, 1], "g": [0, 1], "std": [0, 1], "cv": [0, 1], "point2f": [0, 1], "n": [0, 1], "dimens": [0, 1], "arrai": [0, 1], "i": [0, 1], "nx4": 0, "order": [0, 1], "clockwis": 0, "size": [0, 1], "have": [0, 1], "same": [0, 1], "than": [0, 1], "imgpoint": 0, "contain": [0, 1], "those": 0, "squar": 0, "whose": 0, "inner": 0, "code": 0, "ha": [0, 1], "acorrect": 0, "codif": 0, "us": [0, 1], "debug": 0, "purpos": 0, "rettyp": [0, 1], "tupl": [0, 1], "umat": [0, 1], "refinedetectedmark": 0, "board": 0, "detectedcorn": 0, "detectedid": 0, "rejectedcorn": 0, "cameramatrix": 0, "distcoeff": 0, "recoveredidx": 0, "refin": 0, "base": [0, 1], "alreadi": [0, 1], "layout": 0, "tri": 0, "find": 0, "were": 0, "detecmark": 0, "first": [0, 1], "current": [0, 1], "interpol": 0, "miss": 0, "Then": [0, 1], "between": 0, "reproject": 0, "reject": 0, "candid": 0, "minrepdist": 0, "errorcorrectionr": 0, "If": [0, 1], "coeffici": [0, 1], "projectpoint": 0, "project": 0, "global": 0, "homographi": 0, "all": [0, 1], "must": [0, 1], "z": 0, "coordin": [0, 1], "dure": [0, 1], "process": [0, 1], "option": [0, 1], "3x3": 0, "float": [0, 1], "point": [0, 1], "matrix": 0, "A": [0, 1], "vecthreethre": 0, "f_x": 0, "0": [0, 1], "c_x": 0, "f_y": 0, "c_y": 0, "1": [0, 1], "k_1": 0, "k_2": 0, "p_1": 0, "p_2": 0, "k_3": 0, "k_4": 0, "k_5": 0, "k_6": 0, "s_1": 0, "s_2": 0, "s_3": 0, "s_4": 0, "4": [0, 1], "5": 0, "8": 0, "12": 0, "element": 0, "index": [0, 1], "recov": 0, "theorigin": 0, "__init__": [0, 1], "detectorparam": 0, "detectorparamet": 0, "refineparam": 0, "refineparamet": 0, "initi": [0, 1], "help": [0, 1], "accur": [0, 1], "signatur": [0, 1], "getdictionari": 0, "retval": [0, 1], "setdictionari": 0, "getdetectorparamet": 0, "setdetectorparamet": 0, "getrefineparamet": 0, "setrefineparamet": 0, "write": 0, "f": [0, 1], "name": [0, 1], "simplifi": 0, "api": [0, 1], "languag": [0, 1], "bind": 0, "filestorag": 0, "str": [0, 1], "read": [0, 1], "fn": 0, "algorithm": 0, "from": [0, 1], "file": [0, 1], "storag": 0, "filenod": 0, "objpoint": 0, "matchimagepoint": 0, "given": [0, 1], "configur": [0, 1], "set": [0, 1], "correspondingimag": 0, "object": [0, 1], "can": [0, 1], "solvepnp": 0, "list": [0, 1], "gridboard": 0, "method": [0, 1], "expect": 0, "charucoboard": 0, "mat": [0, 1], "charuco": 0, "chess": 0, "match": 0, "ani": [0, 1], "space": 0, "point3f": 0, "objectpoint": 0, "generateimag": 0, "outsiz": 0, "img": 0, "margins": 0, "borderbit": 0, "draw": 0, "planar": 0, "readi": [0, 1], "print": 0, "output": [0, 1], "pixel": [0, 1], "outsizeand": 0, "center": [0, 1], "keep": [0, 1], "proport": 0, "minimum": [0, 1], "margin": 0, "width": [0, 1], "border": 0, "emploi": 0, "getobjpoint": 0, "left": [0, 1], "top": [0, 1], "th": 0, "right": [0, 1], "2": 0, "bottom": [0, 1], "3": [0, 1], "place": 0, "certain": 0, "row": 0, "everi": [0, 1], "m": 0, "mx4": 0, "getid": 0, "should": [0, 1], "getrightbottomcorn": 0, "get": [0, 1], "when": [0, 1], "call": [0, 1], "creat": [0, 1], "squarelength": 0, "markerlength": 0, "checkcharucocornerscollinear": 0, "charucoid": 0, "check": 0, "whether": [0, 1], "collinear": 0, "number": [0, 1], "chessboard": 0, "straight": 0, "line": 0, "true": [0, 1], "so": [0, 1], "fals": [0, 1], "axi": 0, "parallel": [0, 1], "well": 0, "diagon": 0, "other": [0, 1], "degener": 0, "case": [0, 1], "charucocorn": 0, "per": [0, 1], "frame": [0, 1], "bool": [0, 1], "valu": [0, 1], "form": 0, "thei": [0, 1], "do": [0, 1], "calibr": [0, 1], "fail": [0, 1], "setlegacypattern": 0, "legacypattern": 0, "legaci": 0, "pattern": 0, "start": [0, 1], "white": 0, "box": [0, 1], "upper": 0, "an": [0, 1], "even": 0, "count": [0, 1], "otherwis": 0, "black": 0, "ensur": 0, "compat": 0, "opencv": 0, "version": [0, 1], "prior": 0, "6": 0, "http": [0, 1], "github": [0, 1], "com": [0, 1], "issu": 0, "23152": 0, "default": [0, 1], "getlegacypattern": 0, "getchessboards": 0, "getsquarelength": 0, "getmarkerlength": 0, "getchessboardcorn": 0, "chessboardcorn": 0, "charucodetector": 0, "detectboard": 0, "markercorn": 0, "markerid": 0, "receiv": 0, "empti": [0, 1], "run": [0, 1], "approxim": 0, "els": 0, "local": 0, "visibl": 0, "findchessboardcorn": 0, "necesari": 0, "andshould": 0, "sent": 0, "fourcorn": 0, "detectdiamond": 0, "diamondcorn": 0, "diamondid": 0, "diamond": 0, "previou": [0, 1], "faster": 0, "less": [0, 1], "necessari": [0, 1], "subpixel": 0, "orderi": 0, "similar": [0, 1], "format": [0, 1], "fact": [0, 1], "oftyp": 0, "vec4i": 0, "which": [0, 1], "compos": 0, "charucoparam": 0, "charucoparamet": 0, "getboard": 0, "setboard": 0, "getcharucoparamet": 0, "setcharucoparamet": 0, "minmark": 0, "tryrefinemark": 0, "readdetectorparamet": 0, "new": [0, 1], "root": 0, "writedetectorparamet": 0, "adaptivethreshwinsizemin": 0, "adaptivethreshwinsizemax": 0, "adaptivethreshwinsizestep": 0, "adaptivethreshconst": 0, "minmarkerperimeterr": 0, "maxmarkerperimeterr": 0, "polygonalapproxaccuracyr": 0, "mincornerdistancer": 0, "mindistancetobord": 0, "minmarkerdistancer": 0, "mingroupdist": 0, "cornerrefinementmethod": 0, "cornerrefinementwins": 0, "relativecornerrefinmentwins": 0, "cornerrefinementmaxiter": 0, "cornerrefinementminaccuraci": 0, "markerborderbit": 0, "perspectiveremovepixelpercel": 0, "perspectiveremoveignoredmarginpercel": 0, "maxerroneousbitsinborderr": 0, "minotsustddev": 0, "apriltagquaddecim": 0, "apriltagquadsigma": 0, "apriltagminclusterpixel": 0, "apriltagmaxnmaxima": 0, "apriltagcriticalrad": 0, "apriltagmaxlinefitms": 0, "apriltagminwhiteblackdiff": 0, "apriltagdeglitch": 0, "detectinvertedmark": 0, "usearuco3detect": 0, "minsidelengthcanonicalimg": 0, "minmarkerlengthratiooriginalimg": 0, "byteslist": 0, "_markers": 0, "maxcorr": 0, "getdistancetoid": 0, "bit": [0, 1], "allrot": 0, "ham": 0, "distanc": 0, "flag": [0, 1], "posibl": 0, "rotat": [0, 1], "consid": 0, "generateimagemark": 0, "sidepixel": 0, "_img": 0, "gener": 0, "canon": 0, "readdictionari": 0, "exampl": 0, "yaml": [0, 1], "nmarker": 0, "35": 0, "markers": 0, "maxcorrectionbit": 0, "marker_0": 0, "101011111011111001001001101100000000": 0, "marker_34": 0, "011111010000111011111110110101100101": 0, "writedictionari": 0, "onlybit": 0, "maxcorrectionr": 0, "idx": [0, 1], "refer": [0, 1], "static": 0, "getbytelistfrombit": 0, "transform": [0, 1], "byte": [0, 1], "getbitsfrombytelist": 0, "bytelist": 0, "markersepar": 0, "getgrids": 0, "getmarkersepar": 0, "checkallord": 0, "readrefineparamet": 0, "writerefineparamet": 0, "dictionary_getbitsfrombytelist": 0, "dictionary_getbytelistfrombit": 0, "drawdetectedcornerscharuco": 0, "cornercolor": 0, "channel": [0, 1], "notalt": 0, "scalar": [0, 1], "color": 0, "surround": 0, "drawdetecteddiamond": 0, "bordercolor": 0, "them": [0, 1], "paint": 0, "bydetectcharucodiamond": 0, "formatreturn": 0, "detectcharucodiamond": 0, "rest": 0, "text": [0, 1], "calcul": 0, "one": [0, 1], "drawdetectedmark": 0, "alter": 0, "markerscorn": 0, "improv": 0, "visual": 0, "extenddictionari": 0, "basedictionari": 0, "randomse": 0, "extend": 0, "x": [0, 1], "directli": 0, "higher": 0, "taken": [0, 1], "ad": [0, 1], "begin": 0, "user": [0, 1], "suppli": 0, "seed": 0, "therng": 0, "indic": [0, 1], "valid": 0, "specifi": [0, 1], "getpredefineddictionari": 0, "dict": 0, "predefin": 0, "referenc": 0, "dict_": 0, "dnn_backend_cann": 1, "dnn_backend_cuda": 1, "dnn_backend_default": 1, "dnn_backend_halid": 1, "dnn_backend_inference_engin": 1, "dnn_backend_opencv": 1, "dnn_backend_timvx": 1, "dnn_backend_vkcom": 1, "dnn_backend_webnn": 1, "dnn_layout_ncdhw": 1, "dnn_layout_nchw": 1, "dnn_layout_nd": 1, "dnn_layout_ndhwc": 1, "dnn_layout_nhwc": 1, "dnn_layout_planar": 1, "dnn_layout_unknown": 1, "dnn_pmode_crop_cent": 1, "dnn_pmode_letterbox": 1, "dnn_pmode_nul": 1, "dnn_target_cpu": 1, "dnn_target_cpu_fp16": 1, "dnn_target_cuda": 1, "dnn_target_cuda_fp16": 1, "dnn_target_fpga": 1, "dnn_target_hddl": 1, "dnn_target_myriad": 1, "dnn_target_npu": 1, "dnn_target_opencl": 1, "dnn_target_opencl_fp16": 1, "dnn_target_vulkan": 1, "soft_nmsmethod_softnms_gaussian": 1, "soft_nmsmethod_softnms_linear": 1, "softnmsmethod_softnms_gaussian": 1, "softnmsmethod_softnms_linear": 1, "classificationmodel": 1, "config": 1, "network": 1, "net": 1, "classifi": 1, "classid": 1, "conf": 1, "overload": 1, "setenablesoftmaxpostprocess": 1, "enabl": 1, "disabl": 1, "softmax": 1, "post": 1, "appli": 1, "after": 1, "forward": 1, "infer": 1, "within": 1, "convert": 1, "confid": 1, "rang": 1, "allow": 1, "you": 1, "toggl": 1, "behavior": 1, "pleas": 1, "turn": 1, "layer": 1, "param": 1, "getenablesoftmaxpostprocess": 1, "detectionmodel": 1, "confthreshold": 1, "nmsthreshold": 1, "p": 1, "blob": 1, "result": 1, "out": 1, "bound": 1, "threshold": 1, "filter": 1, "non": 1, "maximum": 1, "suppress": 1, "rect": 1, "setnmsacrossclass": 1, "nmsacrossclass": 1, "max": 1, "behaviour": 1, "getnmsacrossclass": 1, "getter": 1, "variabl": 1, "dictvalu": 1, "isint": 1, "isstr": 1, "isreal": 1, "getintvalu": 1, "getrealvalu": 1, "getstringvalu": 1, "image2blobparam": 1, "scalefactor": 1, "mean": 1, "swaprb": 1, "ddepth": 1, "datalayout": 1, "mode": 1, "imagepaddingmod": 1, "bordervalu": 1, "blobrecttoimagerect": 1, "rblob": 1, "rectangl": 1, "origin": 1, "system": 1, "blobrectstoimagerect": 1, "rimg": 1, "paddingmod": 1, "keypointsmodel": 1, "thresh": 1, "select": 1, "keypoint": 1, "hold": 1, "y": 1, "preferabletarget": 1, "final": 1, "comput": 1, "intern": 1, "accord": 1, "alloc": 1, "memori": 1, "befor": 1, "inferenc": 1, "deprec": 1, "sinc": 1, "unknown": 1, "remov": 1, "futur": 1, "releas": 1, "outputnametoindex": 1, "outputnam": 1, "inputnametoindex": 1, "setinputs": 1, "height": 1, "shape": 1, "chang": 1, "predict": 1, "store": 1, "setinputmean": 1, "subtract": 1, "setinputscal": 1, "scale": 1, "multipli": 1, "setinputcrop": 1, "crop": 1, "resiz": 1, "setinputswaprb": 1, "swap": 1, "last": 1, "setinputparam": 1, "preprocess": 1, "c": 1, "setpreferablebackend": 1, "backendid": 1, "backend": 1, "setpreferabletarget": 1, "targetid": 1, "target": 1, "enablewinograd": 1, "usewinograd": 1, "classmethod": 1, "readfrommodeloptim": 1, "xml": 1, "bin": 1, "intel": 1, "optim": 1, "buffer": 1, "intermedi": 1, "represent": 1, "ir": 1, "buffermodelconfig": 1, "bufferweight": 1, "train": 1, "weight": 1, "cl": 1, "numpi": 1, "ndarrai": 1, "dtype": 1, "uint8": 1, "getlay": 1, "layerid": 1, "pointer": 1, "layernam": 1, "getlayerid": 1, "const": 1, "string": 1, "pass": 1, "outblobnam": 1, "outputblob": 1, "need": 1, "detail": 1, "whole": 1, "By": 1, "quantiz": 1, "calibdata": 1, "inputsdtyp": 1, "outputsdtyp": 1, "perchannel": 1, "data": 1, "datatyp": 1, "cv_32f": 1, "cv_8": 1, "granular": 1, "modelin": 1, "wai": 1, "wise": 1, "tensor": 1, "setinput": 1, "h": 1, "w": 1, "time": 1, "mean_c": 1, "cv_8u": 1, "depth": 1, "normal": 1, "connect": 1, "know": 1, "descriptor": 1, "setparam": 1, "numparam": 1, "learn": 1, "differ": 1, "follow": 1, "mai": 1, "getparam": 1, "getlayersshap": 1, "netinputshap": 1, "layersid": 1, "inlayersshap": 1, "outlayersshap": 1, "load": 1, "preliminari": 1, "isn": 1, "t": 1, "matshap": 1, "getflop": 1, "flop": 1, "getmemoryconsumpt": 1, "dump": 1, "structur": 1, "hyperparamet": 1, "fusion": 1, "To": 1, "dumptofil": 1, "path": 1, "dot": 1, "extens": 1, "integ": 1, "wasn": 1, "found": 1, "getlayernam": 1, "outpin": 1, "inppin": 1, "second": 1, "templat": 1, "layer_nam": 1, "input_numb": 1, "part": 1, "pseudo": 1, "either": 1, "label": 1, "omit": 1, "setnetinput": 1, "setinputsnam": 1, "inputblobnam": 1, "alwai": 1, "special": 1, "own": 1, "don": 1, "make": 1, "In": 1, "As": 1, "easi": 1, "setinputshap": 1, "inputnam": 1, "forwardasync": 1, "asynchron": 1, "requir": 1, "asyncarrai": 1, "forwardandretriev": 1, "getinputdetail": 1, "zeropoint": 1, "getoutputdetail": 1, "sethalideschedul": 1, "schedul": 1, "compil": 1, "halid": 1, "direct": 1, "support": 1, "repres": 1, "manual": 1, "automat": 1, "ask": 1, "where": 1, "devic": 1, "combin": 1, "getunconnectedoutlay": 1, "unconnect": 1, "fixit": 1, "rework": 1, "registeroutput": 1, "approach": 1, "getunconnectedoutlayersnam": 1, "getlayertyp": 1, "layerstyp": 1, "getlayerscount": 1, "layertyp": 1, "enablefus": 1, "winograd": 1, "branch": 1, "speed": 1, "up3x3": 1, "convolut": 1, "small": 1, "loss": 1, "accuraci": 1, "getperfprofil": 1, "overal": 1, "tick": 1, "some": 1, "fuse": 1, "zero": 1, "skip": 1, "segmentationmodel": 1, "segment": 1, "mask": 1, "textdetectionmodel": 1, "prepar": 1, "quadrangl": 1, "getperspectivetransform": 1, "retriev": 1, "region": 1, "without": 1, "perspect": 1, "dl": 1, "doesn": 1, "kind": 1, "deriv": 1, "detecttextrectangl": 1, "rotationrect": 1, "inaccur": 1, "strong": 1, "rotatedrect": 1, "textdetectionmodel_db": 1, "setbinarythreshold": 1, "binarythreshold": 1, "getbinarythreshold": 1, "setpolygonthreshold": 1, "polygonthreshold": 1, "getpolygonthreshold": 1, "setunclipratio": 1, "unclipratio": 1, "getunclipratio": 1, "setmaxcandid": 1, "maxcandid": 1, "getmaxcandid": 1, "textdetectionmodel_east": 1, "setconfidencethreshold": 1, "getconfidencethreshold": 1, "setnmsthreshold": 1, "nm": 1, "getnmsthreshold": 1, "textrecognitionmodel": 1, "recogn": 1, "recognit": 1, "roirect": 1, "interest": 1, "cv_32sc4": 1, "roi": 1, "setdecodetyp": 1, "decodetyp": 1, "decod": 1, "translat": 1, "ctc": 1, "greedi": 1, "prefix": 1, "beam": 1, "getdecodetyp": 1, "setdecodeoptsctcprefixbeamsearch": 1, "beamsiz": 1, "vocprunes": 1, "usag": 1, "big": 1, "vocabulari": 1, "token": 1, "step": 1, "stand": 1, "prune": 1, "setvocabulari": 1, "associ": 1, "getvocabulari": 1, "nmsbox": 1, "bbox": 1, "score": 1, "score_threshold": 1, "nms_threshold": 1, "eta": 1, "top_k": 1, "rect2d": 1, "kept": 1, "adapt": 1, "formula": 1, "_threshold_": 1, "cdot": 1, "_threshold_i": 1, "most": 1, "pick": 1, "nmsboxesbatch": 1, "class_id": 1, "batch": 1, "across": 1, "usual": 1, "nmsboxesrot": 1, "net_readfrommodeloptim": 1, "blobfromimag": 1, "dimension": 1, "blue": 1, "red": 1, "spatial": 1, "intendedto": 1, "r": 1, "b": 1, "bgr": 1, "channelsin": 1, "choos": 1, "side": 1, "equal": 1, "anoth": 1, "larger": 1, "preserv": 1, "aspect": 1, "ratio": 1, "nchw": 1, "blobfromimagewithparam": 1, "ref": 1, "meet": 1, "more": 1, "struct": 1, "seri": 1, "andcrop": 1, "blobfromimageswithparam": 1, "getavailabletarget": 1, "imagesfromblob": 1, "blob_": 1, "images_": 1, "pars": 1, "4d": 1, "through": 1, "simpler": 1, "precis": 1, "would": 1, "like": 1, "extract": 1, "neither": 1, "readnet": 1, "framework": 1, "deep": 1, "member": 1, "conveni": 1, "abov": 1, "what": 1, "argument": 1, "accept": 1, "buffermodel": 1, "content": 1, "binari": 1, "bufferconfig": 1, "appropri": 1, "readnetfromcaff": 1, "readnetfromtensorflow": 1, "readnetfromtorch": 1, "readnetfromdarknet": 1, "matter": 1, "prototxt": 1, "caffemodel": 1, "caff": 1, "bufferproto": 1, "descript": 1, "architectur": 1, "cfgfile": 1, "darknetmodel": 1, "darknet": 1, "buffercfg": 1, "cfg": 1, "throw": 1, "except": 1, "failur": 1, "readnetfrommodeloptim": 1, "topologi": 1, "import": 1, "launch": 1, "engin": 1, "readnetfromonnx": 1, "onnxfil": 1, "onnx": 1, "readnetfromtflit": 1, "tflite": 1, "flatbuff": 1, "tensorflow": 1, "pb": 1, "protobuf": 1, "pbtxt": 1, "graph": 1, "definit": 1, "built": 1, "let": 1, "u": 1, "flexibl": 1, "isbinari": 1, "evalu": 1, "torch7": 1, "serial": 1, "nn": 1, "modul": 1, "try": 1, "elimin": 1, "custom": 1, "serialaz": 1, "avoid": 1, "error": 1, "instanc": 1, "torch": 1, "sequenti": 1, "concat": 1, "linear": 1, "spatialconvolut": 1, "spatialmaxpool": 1, "spatialaveragepool": 1, "relu": 1, "tanh": 1, "sigmoid": 1, "reshap": 1, "logsoftmax": 1, "equival": 1, "cunn": 1, "cudnn": 1, "fbcunn": 1, "successfulli": 1, "ascii": 1, "prefer": 1, "becaus": 1, "long": 1, "variou": 1, "length": 1, "save": 1, "wa": 1, "test": 1, "phase": 1, "readtensorfromonnx": 1, "readtorchblob": 1, "filenam": 1, "warn": 1, "limit": 1, "shrinkcaffemodel": 1, "src": 1, "dst": 1, "half": 1, "shrink": 1, "float32": 1, "usedin": 1, "anymor": 1, "howev": 1, "nvidia": 1, "fork": 1, "singleprecis": 1, "destin": 1, "updat": 1, "fulli": 1, "softnmsbox": 1, "sigma": 1, "updated_scor": 1, "soft": 1, "arxiv": 1, "org": 1, "ab": 1, "1704": 1, "04503": 1, "gaussian": 1, "softnmsmethod": 1, "writetextgraph": 1, "protocol": 1, "reduc": 1, "cv2": 2, "aruco": 2, "dnn": 2}, "objects": {"cv2": [[0, 0, 0, "-", "aruco"], [1, 0, 0, "-", "dnn"]], "cv2.aruco": [[0, 1, 1, "", "ArucoDetector"], [0, 1, 1, "", "Board"], [0, 3, 1, "", "CORNER_REFINE_APRILTAG"], [0, 3, 1, "", "CORNER_REFINE_CONTOUR"], [0, 3, 1, "", "CORNER_REFINE_NONE"], [0, 3, 1, "", "CORNER_REFINE_SUBPIX"], [0, 1, 1, "", "CharucoBoard"], [0, 1, 1, "", "CharucoDetector"], [0, 1, 1, "", "CharucoParameters"], [0, 3, 1, "", "DICT_4X4_100"], [0, 3, 1, "", "DICT_4X4_1000"], [0, 3, 1, "", "DICT_4X4_250"], [0, 3, 1, "", "DICT_4X4_50"], [0, 3, 1, "", "DICT_5X5_100"], [0, 3, 1, "", "DICT_5X5_1000"], [0, 3, 1, "", "DICT_5X5_250"], [0, 3, 1, "", "DICT_5X5_50"], [0, 3, 1, "", "DICT_6X6_100"], [0, 3, 1, "", "DICT_6X6_1000"], [0, 3, 1, "", "DICT_6X6_250"], [0, 3, 1, "", "DICT_6X6_50"], [0, 3, 1, "", "DICT_7X7_100"], [0, 3, 1, "", "DICT_7X7_1000"], [0, 3, 1, "", "DICT_7X7_250"], [0, 3, 1, "", "DICT_7X7_50"], [0, 3, 1, "", "DICT_APRILTAG_16H5"], [0, 3, 1, "", "DICT_APRILTAG_16h5"], [0, 3, 1, "", "DICT_APRILTAG_25H9"], [0, 3, 1, "", "DICT_APRILTAG_25h9"], [0, 3, 1, "", "DICT_APRILTAG_36H10"], [0, 3, 1, "", "DICT_APRILTAG_36H11"], [0, 3, 1, "", "DICT_APRILTAG_36h10"], [0, 3, 1, "", "DICT_APRILTAG_36h11"], [0, 3, 1, "", "DICT_ARUCO_MIP_36H12"], [0, 3, 1, "", "DICT_ARUCO_MIP_36h12"], [0, 3, 1, "", "DICT_ARUCO_ORIGINAL"], [0, 1, 1, "", "DetectorParameters"], [0, 1, 1, "", "Dictionary"], [0, 4, 1, "", "Dictionary_getBitsFromByteList"], [0, 4, 1, "", "Dictionary_getByteListFromBits"], [0, 1, 1, "", "GridBoard"], [0, 1, 1, "", "RefineParameters"], [0, 4, 1, "", "drawDetectedCornersCharuco"], [0, 4, 1, "", "drawDetectedDiamonds"], [0, 4, 1, "", "drawDetectedMarkers"], [0, 4, 1, "", "extendDictionary"], [0, 4, 1, "", "generateImageMarker"], [0, 4, 1, "", "getPredefinedDictionary"]], "cv2.aruco.ArucoDetector": [[0, 2, 1, "", "__init__"], [0, 2, 1, "id0", "detectMarkers"], [0, 2, 1, "", "getDetectorParameters"], [0, 2, 1, "", "getDictionary"], [0, 2, 1, "", "getRefineParameters"], [0, 2, 1, "", "read"], [0, 2, 1, "id1", "refineDetectedMarkers"], [0, 2, 1, "", "setDetectorParameters"], [0, 2, 1, "", "setDictionary"], [0, 2, 1, "", "setRefineParameters"], [0, 2, 1, "", "write"]], "cv2.aruco.Board": [[0, 2, 1, "id2", "__init__"], [0, 2, 1, "id4", "generateImage"], [0, 2, 1, "", "getDictionary"], [0, 2, 1, "", "getIds"], [0, 2, 1, "", "getObjPoints"], [0, 2, 1, "", "getRightBottomCorner"], [0, 2, 1, "id3", "matchImagePoints"]], "cv2.aruco.CharucoBoard": [[0, 2, 1, "id5", "__init__"], [0, 2, 1, "id6", "checkCharucoCornersCollinear"], [0, 2, 1, "", "getChessboardCorners"], [0, 2, 1, "", "getChessboardSize"], [0, 2, 1, "", "getLegacyPattern"], [0, 2, 1, "", "getMarkerLength"], [0, 2, 1, "", "getSquareLength"], [0, 2, 1, "", "setLegacyPattern"]], "cv2.aruco.CharucoDetector": [[0, 2, 1, "", "__init__"], [0, 2, 1, "id7", "detectBoard"], [0, 2, 1, "id8", "detectDiamonds"], [0, 2, 1, "", "getBoard"], [0, 2, 1, "", "getCharucoParameters"], [0, 2, 1, "", "getDetectorParameters"], [0, 2, 1, "", "getRefineParameters"], [0, 2, 1, "", "setBoard"], [0, 2, 1, "", "setCharucoParameters"], [0, 2, 1, "", "setDetectorParameters"], [0, 2, 1, "", "setRefineParameters"]], "cv2.aruco.CharucoParameters": [[0, 2, 1, "", "__init__"], [0, 3, 1, "", "cameraMatrix"], [0, 3, 1, "", "distCoeffs"], [0, 3, 1, "", "minMarkers"], [0, 3, 1, "", "tryRefineMarkers"]], "cv2.aruco.DetectorParameters": [[0, 2, 1, "", "__init__"], [0, 3, 1, "", "adaptiveThreshConstant"], [0, 3, 1, "", "adaptiveThreshWinSizeMax"], [0, 3, 1, "", "adaptiveThreshWinSizeMin"], [0, 3, 1, "", "adaptiveThreshWinSizeStep"], [0, 3, 1, "", "aprilTagCriticalRad"], [0, 3, 1, "", "aprilTagDeglitch"], [0, 3, 1, "", "aprilTagMaxLineFitMse"], [0, 3, 1, "", "aprilTagMaxNmaxima"], [0, 3, 1, "", "aprilTagMinClusterPixels"], [0, 3, 1, "", "aprilTagMinWhiteBlackDiff"], [0, 3, 1, "", "aprilTagQuadDecimate"], [0, 3, 1, "", "aprilTagQuadSigma"], [0, 3, 1, "", "cornerRefinementMaxIterations"], [0, 3, 1, "", "cornerRefinementMethod"], [0, 3, 1, "", "cornerRefinementMinAccuracy"], [0, 3, 1, "", "cornerRefinementWinSize"], [0, 3, 1, "", "detectInvertedMarker"], [0, 3, 1, "", "errorCorrectionRate"], [0, 3, 1, "", "markerBorderBits"], [0, 3, 1, "", "maxErroneousBitsInBorderRate"], [0, 3, 1, "", "maxMarkerPerimeterRate"], [0, 3, 1, "", "minCornerDistanceRate"], [0, 3, 1, "", "minDistanceToBorder"], [0, 3, 1, "", "minGroupDistance"], [0, 3, 1, "", "minMarkerDistanceRate"], [0, 3, 1, "", "minMarkerLengthRatioOriginalImg"], [0, 3, 1, "", "minMarkerPerimeterRate"], [0, 3, 1, "", "minOtsuStdDev"], [0, 3, 1, "", "minSideLengthCanonicalImg"], [0, 3, 1, "", "perspectiveRemoveIgnoredMarginPerCell"], [0, 3, 1, "", "perspectiveRemovePixelPerCell"], [0, 3, 1, "", "polygonalApproxAccuracyRate"], [0, 2, 1, "", "readDetectorParameters"], [0, 3, 1, "", "relativeCornerRefinmentWinSize"], [0, 3, 1, "", "useAruco3Detection"], [0, 2, 1, "", "writeDetectorParameters"]], "cv2.aruco.Dictionary": [[0, 2, 1, "id9", "__init__"], [0, 3, 1, "", "bytesList"], [0, 2, 1, "id11", "generateImageMarker"], [0, 2, 1, "", "getBitsFromByteList"], [0, 2, 1, "", "getByteListFromBits"], [0, 2, 1, "id10", "getDistanceToId"], [0, 2, 1, "", "identify"], [0, 3, 1, "", "markerSize"], [0, 3, 1, "", "maxCorrectionBits"], [0, 2, 1, "", "readDictionary"], [0, 2, 1, "", "writeDictionary"]], "cv2.aruco.GridBoard": [[0, 2, 1, "id12", "__init__"], [0, 2, 1, "", "getGridSize"], [0, 2, 1, "", "getMarkerLength"], [0, 2, 1, "", "getMarkerSeparation"]], "cv2.aruco.RefineParameters": [[0, 2, 1, "", "__init__"], [0, 3, 1, "", "checkAllOrders"], [0, 3, 1, "", "errorCorrectionRate"], [0, 3, 1, "", "minRepDistance"], [0, 2, 1, "", "readRefineParameters"], [0, 2, 1, "", "writeRefineParameters"]], "cv2.dnn": [[1, 1, 1, "", "ClassificationModel"], [1, 3, 1, "", "DNN_BACKEND_CANN"], [1, 3, 1, "", "DNN_BACKEND_CUDA"], [1, 3, 1, "", "DNN_BACKEND_DEFAULT"], [1, 3, 1, "", "DNN_BACKEND_HALIDE"], [1, 3, 1, "", "DNN_BACKEND_INFERENCE_ENGINE"], [1, 3, 1, "", "DNN_BACKEND_OPENCV"], [1, 3, 1, "", "DNN_BACKEND_TIMVX"], [1, 3, 1, "", "DNN_BACKEND_VKCOM"], [1, 3, 1, "", "DNN_BACKEND_WEBNN"], [1, 3, 1, "", "DNN_LAYOUT_NCDHW"], [1, 3, 1, "", "DNN_LAYOUT_NCHW"], [1, 3, 1, "", "DNN_LAYOUT_ND"], [1, 3, 1, "", "DNN_LAYOUT_NDHWC"], [1, 3, 1, "", "DNN_LAYOUT_NHWC"], [1, 3, 1, "", "DNN_LAYOUT_PLANAR"], [1, 3, 1, "", "DNN_LAYOUT_UNKNOWN"], [1, 3, 1, "", "DNN_PMODE_CROP_CENTER"], [1, 3, 1, "", "DNN_PMODE_LETTERBOX"], [1, 3, 1, "", "DNN_PMODE_NULL"], [1, 3, 1, "", "DNN_TARGET_CPU"], [1, 3, 1, "", "DNN_TARGET_CPU_FP16"], [1, 3, 1, "", "DNN_TARGET_CUDA"], [1, 3, 1, "", "DNN_TARGET_CUDA_FP16"], [1, 3, 1, "", "DNN_TARGET_FPGA"], [1, 3, 1, "", "DNN_TARGET_HDDL"], [1, 3, 1, "", "DNN_TARGET_MYRIAD"], [1, 3, 1, "", "DNN_TARGET_NPU"], [1, 3, 1, "", "DNN_TARGET_OPENCL"], [1, 3, 1, "", "DNN_TARGET_OPENCL_FP16"], [1, 3, 1, "", "DNN_TARGET_VULKAN"], [1, 1, 1, "", "DetectionModel"], [1, 1, 1, "", "DictValue"], [1, 1, 1, "", "Image2BlobParams"], [1, 1, 1, "", "KeypointsModel"], [1, 1, 1, "", "Layer"], [1, 1, 1, "", "Model"], [1, 4, 1, "", "NMSBoxes"], [1, 4, 1, "", "NMSBoxesBatched"], [1, 4, 1, "", "NMSBoxesRotated"], [1, 1, 1, "", "Net"], [1, 4, 1, "", "Net_readFromModelOptimizer"], [1, 3, 1, "", "SOFT_NMSMETHOD_SOFTNMS_GAUSSIAN"], [1, 3, 1, "", "SOFT_NMSMETHOD_SOFTNMS_LINEAR"], [1, 1, 1, "", "SegmentationModel"], [1, 3, 1, "", "SoftNMSMethod_SOFTNMS_GAUSSIAN"], [1, 3, 1, "", "SoftNMSMethod_SOFTNMS_LINEAR"], [1, 1, 1, "", "TextDetectionModel"], [1, 1, 1, "", "TextDetectionModel_DB"], [1, 1, 1, "", "TextDetectionModel_EAST"], [1, 1, 1, "", "TextRecognitionModel"], [1, 4, 1, "", "blobFromImage"], [1, 4, 1, "", "blobFromImageWithParams"], [1, 4, 1, "", "blobFromImages"], [1, 4, 1, "", "blobFromImagesWithParams"], [1, 4, 1, "", "getAvailableTargets"], [1, 4, 1, "", "imagesFromBlob"], [1, 4, 1, "", "readNet"], [1, 4, 1, "", "readNetFromCaffe"], [1, 4, 1, "", "readNetFromDarknet"], [1, 4, 1, "", "readNetFromModelOptimizer"], [1, 4, 1, "", "readNetFromONNX"], [1, 4, 1, "", "readNetFromTFLite"], [1, 4, 1, "", "readNetFromTensorflow"], [1, 4, 1, "", "readNetFromTorch"], [1, 4, 1, "", "readTensorFromONNX"], [1, 4, 1, "", "readTorchBlob"], [1, 4, 1, "", "shrinkCaffeModel"], [1, 4, 1, "", "softNMSBoxes"], [1, 4, 1, "", "writeTextGraph"]], "cv2.dnn.ClassificationModel": [[1, 2, 1, "id0", "__init__"], [1, 2, 1, "id1", "classify"], [1, 2, 1, "", "getEnableSoftmaxPostProcessing"], [1, 2, 1, "", "setEnableSoftmaxPostProcessing"]], "cv2.dnn.DetectionModel": [[1, 2, 1, "id2", "__init__"], [1, 2, 1, "id3", "detect"], [1, 2, 1, "", "getNmsAcrossClasses"], [1, 2, 1, "", "setNmsAcrossClasses"]], "cv2.dnn.DictValue": [[1, 2, 1, "id5", "__init__"], [1, 2, 1, "", "getIntValue"], [1, 2, 1, "", "getRealValue"], [1, 2, 1, "", "getStringValue"], [1, 2, 1, "", "isInt"], [1, 2, 1, "", "isReal"], [1, 2, 1, "", "isString"]], "cv2.dnn.Image2BlobParams": [[1, 2, 1, "id6", "__init__"], [1, 2, 1, "", "blobRectToImageRect"], [1, 2, 1, "", "blobRectsToImageRects"], [1, 3, 1, "", "borderValue"], [1, 3, 1, "", "datalayout"], [1, 3, 1, "", "ddepth"], [1, 3, 1, "", "mean"], [1, 3, 1, "", "paddingmode"], [1, 3, 1, "", "scalefactor"], [1, 3, 1, "", "size"], [1, 3, 1, "", "swapRB"]], "cv2.dnn.KeypointsModel": [[1, 2, 1, "id7", "__init__"], [1, 2, 1, "id8", "estimate"]], "cv2.dnn.Layer": [[1, 3, 1, "", "blobs"], [1, 2, 1, "id9", "finalize"], [1, 2, 1, "", "name"], [1, 2, 1, "", "outputNameToIndex"], [1, 2, 1, "", "preferableTarget"], [1, 2, 1, "", "run"], [1, 2, 1, "", "type"]], "cv2.dnn.Model": [[1, 2, 1, "id10", "__init__"], [1, 2, 1, "", "enableWinograd"], [1, 2, 1, "id12", "predict"], [1, 2, 1, "", "setInputCrop"], [1, 2, 1, "", "setInputMean"], [1, 2, 1, "", "setInputParams"], [1, 2, 1, "", "setInputScale"], [1, 2, 1, "id11", "setInputSize"], [1, 2, 1, "", "setInputSwapRB"], [1, 2, 1, "", "setPreferableBackend"], [1, 2, 1, "", "setPreferableTarget"]], "cv2.dnn.Net": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "connect"], [1, 2, 1, "", "dump"], [1, 2, 1, "", "dumpToFile"], [1, 2, 1, "", "empty"], [1, 2, 1, "", "enableFusion"], [1, 2, 1, "", "enableWinograd"], [1, 2, 1, "id19", "forward"], [1, 2, 1, "", "forwardAndRetrieve"], [1, 2, 1, "", "forwardAsync"], [1, 2, 1, "id27", "getFLOPS"], [1, 2, 1, "", "getInputDetails"], [1, 2, 1, "id15", "getLayer"], [1, 2, 1, "", "getLayerId"], [1, 2, 1, "", "getLayerNames"], [1, 2, 1, "", "getLayerTypes"], [1, 2, 1, "", "getLayersCount"], [1, 2, 1, "id24", "getLayersShapes"], [1, 2, 1, "id29", "getMemoryConsumption"], [1, 2, 1, "", "getOutputDetails"], [1, 2, 1, "id23", "getParam"], [1, 2, 1, "", "getPerfProfile"], [1, 2, 1, "", "getUnconnectedOutLayers"], [1, 2, 1, "", "getUnconnectedOutLayersNames"], [1, 2, 1, "id20", "quantize"], [1, 2, 1, "id13", "readFromModelOptimizer"], [1, 2, 1, "", "setHalideScheduler"], [1, 2, 1, "id21", "setInput"], [1, 2, 1, "", "setInputShape"], [1, 2, 1, "", "setInputsNames"], [1, 2, 1, "id22", "setParam"], [1, 2, 1, "", "setPreferableBackend"], [1, 2, 1, "", "setPreferableTarget"]], "cv2.dnn.SegmentationModel": [[1, 2, 1, "id30", "__init__"], [1, 2, 1, "id31", "segment"]], "cv2.dnn.TextDetectionModel": [[1, 2, 1, "id34", "detect"], [1, 2, 1, "id37", "detectTextRectangles"]], "cv2.dnn.TextDetectionModel_DB": [[1, 2, 1, "id38", "__init__"], [1, 2, 1, "", "getBinaryThreshold"], [1, 2, 1, "", "getMaxCandidates"], [1, 2, 1, "", "getPolygonThreshold"], [1, 2, 1, "", "getUnclipRatio"], [1, 2, 1, "", "setBinaryThreshold"], [1, 2, 1, "", "setMaxCandidates"], [1, 2, 1, "", "setPolygonThreshold"], [1, 2, 1, "", "setUnclipRatio"]], "cv2.dnn.TextDetectionModel_EAST": [[1, 2, 1, "id39", "__init__"], [1, 2, 1, "", "getConfidenceThreshold"], [1, 2, 1, "", "getNMSThreshold"], [1, 2, 1, "", "setConfidenceThreshold"], [1, 2, 1, "", "setNMSThreshold"]], "cv2.dnn.TextRecognitionModel": [[1, 2, 1, "id40", "__init__"], [1, 2, 1, "", "getDecodeType"], [1, 2, 1, "", "getVocabulary"], [1, 2, 1, "id43", "recognize"], [1, 2, 1, "", "setDecodeOptsCTCPrefixBeamSearch"], [1, 2, 1, "", "setDecodeType"], [1, 2, 1, "", "setVocabulary"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"cv2": [0, 1], "aruco": 0, "attribut": [0, 1], "class": [0, 1], "function": [0, 1], "dnn": 1, "opencv": 2, "python": 2, "api": 2, "content": 2}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 58}, "alltitles": {"cv2.aruco": [[0, "module-cv2.aruco"]], "Attributes": [[0, "attributes"], [1, "attributes"]], "Classes": [[0, "classes"], [1, "classes"]], "Functions": [[0, "functions"], [1, "functions"]], "cv2.dnn": [[1, "module-cv2.dnn"]], "OpenCV Python API": [[2, "opencv-python-api"]], "Contents": [[2, null]]}, "indexentries": {"arucodetector (class in cv2.aruco)": [[0, "cv2.aruco.ArucoDetector"]], "board (class in cv2.aruco)": [[0, "cv2.aruco.Board"]], "corner_refine_apriltag (in module cv2.aruco)": [[0, "cv2.aruco.CORNER_REFINE_APRILTAG"]], "corner_refine_contour (in module cv2.aruco)": [[0, "cv2.aruco.CORNER_REFINE_CONTOUR"]], "corner_refine_none (in module cv2.aruco)": [[0, "cv2.aruco.CORNER_REFINE_NONE"]], "corner_refine_subpix (in module cv2.aruco)": [[0, "cv2.aruco.CORNER_REFINE_SUBPIX"]], "charucoboard (class in cv2.aruco)": [[0, "cv2.aruco.CharucoBoard"]], "charucodetector (class in cv2.aruco)": [[0, "cv2.aruco.CharucoDetector"]], "charucoparameters (class in cv2.aruco)": [[0, "cv2.aruco.CharucoParameters"]], "dict_4x4_100 (in module cv2.aruco)": [[0, "cv2.aruco.DICT_4X4_100"]], "dict_4x4_1000 (in module cv2.aruco)": [[0, "cv2.aruco.DICT_4X4_1000"]], "dict_4x4_250 (in module cv2.aruco)": [[0, "cv2.aruco.DICT_4X4_250"]], "dict_4x4_50 (in module cv2.aruco)": [[0, "cv2.aruco.DICT_4X4_50"]], "dict_5x5_100 (in module cv2.aruco)": [[0, "cv2.aruco.DICT_5X5_100"]], "dict_5x5_1000 (in module cv2.aruco)": [[0, "cv2.aruco.DICT_5X5_1000"]], "dict_5x5_250 (in module cv2.aruco)": [[0, "cv2.aruco.DICT_5X5_250"]], "dict_5x5_50 (in module cv2.aruco)": [[0, "cv2.aruco.DICT_5X5_50"]], "dict_6x6_100 (in module cv2.aruco)": [[0, "cv2.aruco.DICT_6X6_100"]], "dict_6x6_1000 (in module cv2.aruco)": [[0, "cv2.aruco.DICT_6X6_1000"]], "dict_6x6_250 (in module cv2.aruco)": [[0, "cv2.aruco.DICT_6X6_250"]], "dict_6x6_50 (in module cv2.aruco)": [[0, "cv2.aruco.DICT_6X6_50"]], "dict_7x7_100 (in module cv2.aruco)": [[0, "cv2.aruco.DICT_7X7_100"]], "dict_7x7_1000 (in module cv2.aruco)": [[0, "cv2.aruco.DICT_7X7_1000"]], "dict_7x7_250 (in module cv2.aruco)": [[0, "cv2.aruco.DICT_7X7_250"]], "dict_7x7_50 (in module cv2.aruco)": [[0, "cv2.aruco.DICT_7X7_50"]], "dict_apriltag_16h5 (in module cv2.aruco)": [[0, "cv2.aruco.DICT_APRILTAG_16H5"], [0, "cv2.aruco.DICT_APRILTAG_16h5"]], "dict_apriltag_25h9 (in module cv2.aruco)": [[0, "cv2.aruco.DICT_APRILTAG_25H9"], [0, "cv2.aruco.DICT_APRILTAG_25h9"]], "dict_apriltag_36h10 (in module cv2.aruco)": [[0, "cv2.aruco.DICT_APRILTAG_36H10"], [0, "cv2.aruco.DICT_APRILTAG_36h10"]], "dict_apriltag_36h11 (in module cv2.aruco)": [[0, "cv2.aruco.DICT_APRILTAG_36H11"], [0, "cv2.aruco.DICT_APRILTAG_36h11"]], "dict_aruco_mip_36h12 (in module cv2.aruco)": [[0, "cv2.aruco.DICT_ARUCO_MIP_36H12"], [0, "cv2.aruco.DICT_ARUCO_MIP_36h12"]], "dict_aruco_original (in module cv2.aruco)": [[0, "cv2.aruco.DICT_ARUCO_ORIGINAL"]], "detectorparameters (class in cv2.aruco)": [[0, "cv2.aruco.DetectorParameters"]], "dictionary (class in cv2.aruco)": [[0, "cv2.aruco.Dictionary"]], "dictionary_getbitsfrombytelist() (in module cv2.aruco)": [[0, "cv2.aruco.Dictionary_getBitsFromByteList"]], "dictionary_getbytelistfrombits() (in module cv2.aruco)": [[0, "cv2.aruco.Dictionary_getByteListFromBits"]], "gridboard (class in cv2.aruco)": [[0, "cv2.aruco.GridBoard"]], "refineparameters (class in cv2.aruco)": [[0, "cv2.aruco.RefineParameters"]], "__init__() (cv2.aruco.arucodetector method)": [[0, "cv2.aruco.ArucoDetector.__init__"]], "__init__() (cv2.aruco.board method)": [[0, "cv2.aruco.Board.__init__"], [0, "id2"]], "__init__() (cv2.aruco.charucoboard method)": [[0, "cv2.aruco.CharucoBoard.__init__"], [0, "id5"]], "__init__() (cv2.aruco.charucodetector method)": [[0, "cv2.aruco.CharucoDetector.__init__"]], "__init__() (cv2.aruco.charucoparameters method)": [[0, "cv2.aruco.CharucoParameters.__init__"]], "__init__() (cv2.aruco.detectorparameters method)": [[0, "cv2.aruco.DetectorParameters.__init__"]], "__init__() (cv2.aruco.dictionary method)": [[0, "cv2.aruco.Dictionary.__init__"], [0, "id9"]], "__init__() (cv2.aruco.gridboard method)": [[0, "cv2.aruco.GridBoard.__init__"], [0, "id12"]], "__init__() (cv2.aruco.refineparameters method)": [[0, "cv2.aruco.RefineParameters.__init__"]], "adaptivethreshconstant (cv2.aruco.detectorparameters attribute)": [[0, "cv2.aruco.DetectorParameters.adaptiveThreshConstant"]], "adaptivethreshwinsizemax (cv2.aruco.detectorparameters attribute)": [[0, "cv2.aruco.DetectorParameters.adaptiveThreshWinSizeMax"]], "adaptivethreshwinsizemin (cv2.aruco.detectorparameters attribute)": [[0, "cv2.aruco.DetectorParameters.adaptiveThreshWinSizeMin"]], "adaptivethreshwinsizestep (cv2.aruco.detectorparameters attribute)": [[0, "cv2.aruco.DetectorParameters.adaptiveThreshWinSizeStep"]], "apriltagcriticalrad (cv2.aruco.detectorparameters attribute)": [[0, "cv2.aruco.DetectorParameters.aprilTagCriticalRad"]], "apriltagdeglitch (cv2.aruco.detectorparameters attribute)": [[0, "cv2.aruco.DetectorParameters.aprilTagDeglitch"]], "apriltagmaxlinefitmse (cv2.aruco.detectorparameters attribute)": [[0, "cv2.aruco.DetectorParameters.aprilTagMaxLineFitMse"]], "apriltagmaxnmaxima (cv2.aruco.detectorparameters attribute)": [[0, "cv2.aruco.DetectorParameters.aprilTagMaxNmaxima"]], "apriltagminclusterpixels (cv2.aruco.detectorparameters attribute)": [[0, "cv2.aruco.DetectorParameters.aprilTagMinClusterPixels"]], "apriltagminwhiteblackdiff (cv2.aruco.detectorparameters attribute)": [[0, "cv2.aruco.DetectorParameters.aprilTagMinWhiteBlackDiff"]], "apriltagquaddecimate (cv2.aruco.detectorparameters attribute)": [[0, "cv2.aruco.DetectorParameters.aprilTagQuadDecimate"]], "apriltagquadsigma (cv2.aruco.detectorparameters attribute)": [[0, "cv2.aruco.DetectorParameters.aprilTagQuadSigma"]], "byteslist (cv2.aruco.dictionary attribute)": [[0, "cv2.aruco.Dictionary.bytesList"]], "cameramatrix (cv2.aruco.charucoparameters attribute)": [[0, "cv2.aruco.CharucoParameters.cameraMatrix"]], "checkallorders (cv2.aruco.refineparameters attribute)": [[0, "cv2.aruco.RefineParameters.checkAllOrders"]], "checkcharucocornerscollinear() (cv2.aruco.charucoboard method)": [[0, "cv2.aruco.CharucoBoard.checkCharucoCornersCollinear"], [0, "id6"]], "cornerrefinementmaxiterations (cv2.aruco.detectorparameters attribute)": [[0, "cv2.aruco.DetectorParameters.cornerRefinementMaxIterations"]], "cornerrefinementmethod (cv2.aruco.detectorparameters attribute)": [[0, "cv2.aruco.DetectorParameters.cornerRefinementMethod"]], "cornerrefinementminaccuracy (cv2.aruco.detectorparameters attribute)": [[0, "cv2.aruco.DetectorParameters.cornerRefinementMinAccuracy"]], "cornerrefinementwinsize (cv2.aruco.detectorparameters attribute)": [[0, "cv2.aruco.DetectorParameters.cornerRefinementWinSize"]], "cv2.aruco": [[0, "module-cv2.aruco"]], "detectboard() (cv2.aruco.charucodetector method)": [[0, "cv2.aruco.CharucoDetector.detectBoard"], [0, "id7"]], "detectdiamonds() (cv2.aruco.charucodetector method)": [[0, "cv2.aruco.CharucoDetector.detectDiamonds"], [0, "id8"]], "detectinvertedmarker (cv2.aruco.detectorparameters attribute)": [[0, "cv2.aruco.DetectorParameters.detectInvertedMarker"]], "detectmarkers() (cv2.aruco.arucodetector method)": [[0, "cv2.aruco.ArucoDetector.detectMarkers"], [0, "id0"]], "distcoeffs (cv2.aruco.charucoparameters attribute)": [[0, "cv2.aruco.CharucoParameters.distCoeffs"]], "drawdetectedcornerscharuco() (in module cv2.aruco)": [[0, "cv2.aruco.drawDetectedCornersCharuco"]], "drawdetecteddiamonds() (in module cv2.aruco)": [[0, "cv2.aruco.drawDetectedDiamonds"]], "drawdetectedmarkers() (in module cv2.aruco)": [[0, "cv2.aruco.drawDetectedMarkers"]], "errorcorrectionrate (cv2.aruco.detectorparameters attribute)": [[0, "cv2.aruco.DetectorParameters.errorCorrectionRate"]], "errorcorrectionrate (cv2.aruco.refineparameters attribute)": [[0, "cv2.aruco.RefineParameters.errorCorrectionRate"]], "extenddictionary() (in module cv2.aruco)": [[0, "cv2.aruco.extendDictionary"]], "generateimage() (cv2.aruco.board method)": [[0, "cv2.aruco.Board.generateImage"], [0, "id4"]], "generateimagemarker() (cv2.aruco.dictionary method)": [[0, "cv2.aruco.Dictionary.generateImageMarker"], [0, "id11"]], "generateimagemarker() (in module cv2.aruco)": [[0, "cv2.aruco.generateImageMarker"]], "getbitsfrombytelist() (cv2.aruco.dictionary static method)": [[0, "cv2.aruco.Dictionary.getBitsFromByteList"]], "getboard() (cv2.aruco.charucodetector method)": [[0, "cv2.aruco.CharucoDetector.getBoard"]], "getbytelistfrombits() (cv2.aruco.dictionary static method)": [[0, "cv2.aruco.Dictionary.getByteListFromBits"]], "getcharucoparameters() (cv2.aruco.charucodetector method)": [[0, "cv2.aruco.CharucoDetector.getCharucoParameters"]], "getchessboardcorners() (cv2.aruco.charucoboard method)": [[0, "cv2.aruco.CharucoBoard.getChessboardCorners"]], "getchessboardsize() (cv2.aruco.charucoboard method)": [[0, "cv2.aruco.CharucoBoard.getChessboardSize"]], "getdetectorparameters() (cv2.aruco.arucodetector method)": [[0, "cv2.aruco.ArucoDetector.getDetectorParameters"]], "getdetectorparameters() (cv2.aruco.charucodetector method)": [[0, "cv2.aruco.CharucoDetector.getDetectorParameters"]], "getdictionary() (cv2.aruco.arucodetector method)": [[0, "cv2.aruco.ArucoDetector.getDictionary"]], "getdictionary() (cv2.aruco.board method)": [[0, "cv2.aruco.Board.getDictionary"]], "getdistancetoid() (cv2.aruco.dictionary method)": [[0, "cv2.aruco.Dictionary.getDistanceToId"], [0, "id10"]], "getgridsize() (cv2.aruco.gridboard method)": [[0, "cv2.aruco.GridBoard.getGridSize"]], "getids() (cv2.aruco.board method)": [[0, "cv2.aruco.Board.getIds"]], "getlegacypattern() (cv2.aruco.charucoboard method)": [[0, "cv2.aruco.CharucoBoard.getLegacyPattern"]], "getmarkerlength() (cv2.aruco.charucoboard method)": [[0, "cv2.aruco.CharucoBoard.getMarkerLength"]], "getmarkerlength() (cv2.aruco.gridboard method)": [[0, "cv2.aruco.GridBoard.getMarkerLength"]], "getmarkerseparation() (cv2.aruco.gridboard method)": [[0, "cv2.aruco.GridBoard.getMarkerSeparation"]], "getobjpoints() (cv2.aruco.board method)": [[0, "cv2.aruco.Board.getObjPoints"]], "getpredefineddictionary() (in module cv2.aruco)": [[0, "cv2.aruco.getPredefinedDictionary"]], "getrefineparameters() (cv2.aruco.arucodetector method)": [[0, "cv2.aruco.ArucoDetector.getRefineParameters"]], "getrefineparameters() (cv2.aruco.charucodetector method)": [[0, "cv2.aruco.CharucoDetector.getRefineParameters"]], "getrightbottomcorner() (cv2.aruco.board method)": [[0, "cv2.aruco.Board.getRightBottomCorner"]], "getsquarelength() (cv2.aruco.charucoboard method)": [[0, "cv2.aruco.CharucoBoard.getSquareLength"]], "identify() (cv2.aruco.dictionary method)": [[0, "cv2.aruco.Dictionary.identify"]], "markerborderbits (cv2.aruco.detectorparameters attribute)": [[0, "cv2.aruco.DetectorParameters.markerBorderBits"]], "markersize (cv2.aruco.dictionary attribute)": [[0, "cv2.aruco.Dictionary.markerSize"]], "matchimagepoints() (cv2.aruco.board method)": [[0, "cv2.aruco.Board.matchImagePoints"], [0, "id3"]], "maxcorrectionbits (cv2.aruco.dictionary attribute)": [[0, "cv2.aruco.Dictionary.maxCorrectionBits"]], "maxerroneousbitsinborderrate (cv2.aruco.detectorparameters attribute)": [[0, "cv2.aruco.DetectorParameters.maxErroneousBitsInBorderRate"]], "maxmarkerperimeterrate (cv2.aruco.detectorparameters attribute)": [[0, "cv2.aruco.DetectorParameters.maxMarkerPerimeterRate"]], "mincornerdistancerate (cv2.aruco.detectorparameters attribute)": [[0, "cv2.aruco.DetectorParameters.minCornerDistanceRate"]], "mindistancetoborder (cv2.aruco.detectorparameters attribute)": [[0, "cv2.aruco.DetectorParameters.minDistanceToBorder"]], "mingroupdistance (cv2.aruco.detectorparameters attribute)": [[0, "cv2.aruco.DetectorParameters.minGroupDistance"]], "minmarkerdistancerate (cv2.aruco.detectorparameters attribute)": [[0, "cv2.aruco.DetectorParameters.minMarkerDistanceRate"]], "minmarkerlengthratiooriginalimg (cv2.aruco.detectorparameters attribute)": [[0, "cv2.aruco.DetectorParameters.minMarkerLengthRatioOriginalImg"]], "minmarkerperimeterrate (cv2.aruco.detectorparameters attribute)": [[0, "cv2.aruco.DetectorParameters.minMarkerPerimeterRate"]], "minmarkers (cv2.aruco.charucoparameters attribute)": [[0, "cv2.aruco.CharucoParameters.minMarkers"]], "minotsustddev (cv2.aruco.detectorparameters attribute)": [[0, "cv2.aruco.DetectorParameters.minOtsuStdDev"]], "minrepdistance (cv2.aruco.refineparameters attribute)": [[0, "cv2.aruco.RefineParameters.minRepDistance"]], "minsidelengthcanonicalimg (cv2.aruco.detectorparameters attribute)": [[0, "cv2.aruco.DetectorParameters.minSideLengthCanonicalImg"]], "module": [[0, "module-cv2.aruco"], [1, "module-cv2.dnn"]], "perspectiveremoveignoredmarginpercell (cv2.aruco.detectorparameters attribute)": [[0, "cv2.aruco.DetectorParameters.perspectiveRemoveIgnoredMarginPerCell"]], "perspectiveremovepixelpercell (cv2.aruco.detectorparameters attribute)": [[0, "cv2.aruco.DetectorParameters.perspectiveRemovePixelPerCell"]], "polygonalapproxaccuracyrate (cv2.aruco.detectorparameters attribute)": [[0, "cv2.aruco.DetectorParameters.polygonalApproxAccuracyRate"]], "read() (cv2.aruco.arucodetector method)": [[0, "cv2.aruco.ArucoDetector.read"]], "readdetectorparameters() (cv2.aruco.detectorparameters method)": [[0, "cv2.aruco.DetectorParameters.readDetectorParameters"]], "readdictionary() (cv2.aruco.dictionary method)": [[0, "cv2.aruco.Dictionary.readDictionary"]], "readrefineparameters() (cv2.aruco.refineparameters method)": [[0, "cv2.aruco.RefineParameters.readRefineParameters"]], "refinedetectedmarkers() (cv2.aruco.arucodetector method)": [[0, "cv2.aruco.ArucoDetector.refineDetectedMarkers"], [0, "id1"]], "relativecornerrefinmentwinsize (cv2.aruco.detectorparameters attribute)": [[0, "cv2.aruco.DetectorParameters.relativeCornerRefinmentWinSize"]], "setboard() (cv2.aruco.charucodetector method)": [[0, "cv2.aruco.CharucoDetector.setBoard"]], "setcharucoparameters() (cv2.aruco.charucodetector method)": [[0, "cv2.aruco.CharucoDetector.setCharucoParameters"]], "setdetectorparameters() (cv2.aruco.arucodetector method)": [[0, "cv2.aruco.ArucoDetector.setDetectorParameters"]], "setdetectorparameters() (cv2.aruco.charucodetector method)": [[0, "cv2.aruco.CharucoDetector.setDetectorParameters"]], "setdictionary() (cv2.aruco.arucodetector method)": [[0, "cv2.aruco.ArucoDetector.setDictionary"]], "setlegacypattern() (cv2.aruco.charucoboard method)": [[0, "cv2.aruco.CharucoBoard.setLegacyPattern"]], "setrefineparameters() (cv2.aruco.arucodetector method)": [[0, "cv2.aruco.ArucoDetector.setRefineParameters"]], "setrefineparameters() (cv2.aruco.charucodetector method)": [[0, "cv2.aruco.CharucoDetector.setRefineParameters"]], "tryrefinemarkers (cv2.aruco.charucoparameters attribute)": [[0, "cv2.aruco.CharucoParameters.tryRefineMarkers"]], "usearuco3detection (cv2.aruco.detectorparameters attribute)": [[0, "cv2.aruco.DetectorParameters.useAruco3Detection"]], "write() (cv2.aruco.arucodetector method)": [[0, "cv2.aruco.ArucoDetector.write"]], "writedetectorparameters() (cv2.aruco.detectorparameters method)": [[0, "cv2.aruco.DetectorParameters.writeDetectorParameters"]], "writedictionary() (cv2.aruco.dictionary method)": [[0, "cv2.aruco.Dictionary.writeDictionary"]], "writerefineparameters() (cv2.aruco.refineparameters method)": [[0, "cv2.aruco.RefineParameters.writeRefineParameters"]], "classificationmodel (class in cv2.dnn)": [[1, "cv2.dnn.ClassificationModel"]], "dnn_backend_cann (in module cv2.dnn)": [[1, "cv2.dnn.DNN_BACKEND_CANN"]], "dnn_backend_cuda (in module cv2.dnn)": [[1, "cv2.dnn.DNN_BACKEND_CUDA"]], "dnn_backend_default (in module cv2.dnn)": [[1, "cv2.dnn.DNN_BACKEND_DEFAULT"]], "dnn_backend_halide (in module cv2.dnn)": [[1, "cv2.dnn.DNN_BACKEND_HALIDE"]], "dnn_backend_inference_engine (in module cv2.dnn)": [[1, "cv2.dnn.DNN_BACKEND_INFERENCE_ENGINE"]], "dnn_backend_opencv (in module cv2.dnn)": [[1, "cv2.dnn.DNN_BACKEND_OPENCV"]], "dnn_backend_timvx (in module cv2.dnn)": [[1, "cv2.dnn.DNN_BACKEND_TIMVX"]], "dnn_backend_vkcom (in module cv2.dnn)": [[1, "cv2.dnn.DNN_BACKEND_VKCOM"]], "dnn_backend_webnn (in module cv2.dnn)": [[1, "cv2.dnn.DNN_BACKEND_WEBNN"]], "dnn_layout_ncdhw (in module cv2.dnn)": [[1, "cv2.dnn.DNN_LAYOUT_NCDHW"]], "dnn_layout_nchw (in module cv2.dnn)": [[1, "cv2.dnn.DNN_LAYOUT_NCHW"]], "dnn_layout_nd (in module cv2.dnn)": [[1, "cv2.dnn.DNN_LAYOUT_ND"]], "dnn_layout_ndhwc (in module cv2.dnn)": [[1, "cv2.dnn.DNN_LAYOUT_NDHWC"]], "dnn_layout_nhwc (in module cv2.dnn)": [[1, "cv2.dnn.DNN_LAYOUT_NHWC"]], "dnn_layout_planar (in module cv2.dnn)": [[1, "cv2.dnn.DNN_LAYOUT_PLANAR"]], "dnn_layout_unknown (in module cv2.dnn)": [[1, "cv2.dnn.DNN_LAYOUT_UNKNOWN"]], "dnn_pmode_crop_center (in module cv2.dnn)": [[1, "cv2.dnn.DNN_PMODE_CROP_CENTER"]], "dnn_pmode_letterbox (in module cv2.dnn)": [[1, "cv2.dnn.DNN_PMODE_LETTERBOX"]], "dnn_pmode_null (in module cv2.dnn)": [[1, "cv2.dnn.DNN_PMODE_NULL"]], "dnn_target_cpu (in module cv2.dnn)": [[1, "cv2.dnn.DNN_TARGET_CPU"]], "dnn_target_cpu_fp16 (in module cv2.dnn)": [[1, "cv2.dnn.DNN_TARGET_CPU_FP16"]], "dnn_target_cuda (in module cv2.dnn)": [[1, "cv2.dnn.DNN_TARGET_CUDA"]], "dnn_target_cuda_fp16 (in module cv2.dnn)": [[1, "cv2.dnn.DNN_TARGET_CUDA_FP16"]], "dnn_target_fpga (in module cv2.dnn)": [[1, "cv2.dnn.DNN_TARGET_FPGA"]], "dnn_target_hddl (in module cv2.dnn)": [[1, "cv2.dnn.DNN_TARGET_HDDL"]], "dnn_target_myriad (in module cv2.dnn)": [[1, "cv2.dnn.DNN_TARGET_MYRIAD"]], "dnn_target_npu (in module cv2.dnn)": [[1, "cv2.dnn.DNN_TARGET_NPU"]], "dnn_target_opencl (in module cv2.dnn)": [[1, "cv2.dnn.DNN_TARGET_OPENCL"]], "dnn_target_opencl_fp16 (in module cv2.dnn)": [[1, "cv2.dnn.DNN_TARGET_OPENCL_FP16"]], "dnn_target_vulkan (in module cv2.dnn)": [[1, "cv2.dnn.DNN_TARGET_VULKAN"]], "detectionmodel (class in cv2.dnn)": [[1, "cv2.dnn.DetectionModel"]], "dictvalue (class in cv2.dnn)": [[1, "cv2.dnn.DictValue"]], "image2blobparams (class in cv2.dnn)": [[1, "cv2.dnn.Image2BlobParams"]], "keypointsmodel (class in cv2.dnn)": [[1, "cv2.dnn.KeypointsModel"]], "layer (class in cv2.dnn)": [[1, "cv2.dnn.Layer"]], "model (class in cv2.dnn)": [[1, "cv2.dnn.Model"]], "nmsboxes() (in module cv2.dnn)": [[1, "cv2.dnn.NMSBoxes"]], "nmsboxesbatched() (in module cv2.dnn)": [[1, "cv2.dnn.NMSBoxesBatched"]], "nmsboxesrotated() (in module cv2.dnn)": [[1, "cv2.dnn.NMSBoxesRotated"]], "net (class in cv2.dnn)": [[1, "cv2.dnn.Net"]], "net_readfrommodeloptimizer() (in module cv2.dnn)": [[1, "cv2.dnn.Net_readFromModelOptimizer"]], "soft_nmsmethod_softnms_gaussian (in module cv2.dnn)": [[1, "cv2.dnn.SOFT_NMSMETHOD_SOFTNMS_GAUSSIAN"]], "soft_nmsmethod_softnms_linear (in module cv2.dnn)": [[1, "cv2.dnn.SOFT_NMSMETHOD_SOFTNMS_LINEAR"]], "segmentationmodel (class in cv2.dnn)": [[1, "cv2.dnn.SegmentationModel"]], "softnmsmethod_softnms_gaussian (in module cv2.dnn)": [[1, "cv2.dnn.SoftNMSMethod_SOFTNMS_GAUSSIAN"]], "softnmsmethod_softnms_linear (in module cv2.dnn)": [[1, "cv2.dnn.SoftNMSMethod_SOFTNMS_LINEAR"]], "textdetectionmodel (class in cv2.dnn)": [[1, "cv2.dnn.TextDetectionModel"]], "textdetectionmodel_db (class in cv2.dnn)": [[1, "cv2.dnn.TextDetectionModel_DB"]], "textdetectionmodel_east (class in cv2.dnn)": [[1, "cv2.dnn.TextDetectionModel_EAST"]], "textrecognitionmodel (class in cv2.dnn)": [[1, "cv2.dnn.TextRecognitionModel"]], "__init__() (cv2.dnn.classificationmodel method)": [[1, "cv2.dnn.ClassificationModel.__init__"], [1, "id0"]], "__init__() (cv2.dnn.detectionmodel method)": [[1, "cv2.dnn.DetectionModel.__init__"], [1, "id2"]], "__init__() (cv2.dnn.dictvalue method)": [[1, "cv2.dnn.DictValue.__init__"], [1, "id4"], [1, "id5"]], "__init__() (cv2.dnn.image2blobparams method)": [[1, "cv2.dnn.Image2BlobParams.__init__"], [1, "id6"]], "__init__() (cv2.dnn.keypointsmodel method)": [[1, "cv2.dnn.KeypointsModel.__init__"], [1, "id7"]], "__init__() (cv2.dnn.model method)": [[1, "cv2.dnn.Model.__init__"], [1, "id10"]], "__init__() (cv2.dnn.net method)": [[1, "cv2.dnn.Net.__init__"]], "__init__() (cv2.dnn.segmentationmodel method)": [[1, "cv2.dnn.SegmentationModel.__init__"], [1, "id30"]], "__init__() (cv2.dnn.textdetectionmodel_db method)": [[1, "cv2.dnn.TextDetectionModel_DB.__init__"], [1, "id38"]], "__init__() (cv2.dnn.textdetectionmodel_east method)": [[1, "cv2.dnn.TextDetectionModel_EAST.__init__"], [1, "id39"]], "__init__() (cv2.dnn.textrecognitionmodel method)": [[1, "cv2.dnn.TextRecognitionModel.__init__"], [1, "id40"]], "blobfromimage() (in module cv2.dnn)": [[1, "cv2.dnn.blobFromImage"]], "blobfromimagewithparams() (in module cv2.dnn)": [[1, "cv2.dnn.blobFromImageWithParams"]], "blobfromimages() (in module cv2.dnn)": [[1, "cv2.dnn.blobFromImages"]], "blobfromimageswithparams() (in module cv2.dnn)": [[1, "cv2.dnn.blobFromImagesWithParams"]], "blobrecttoimagerect() (cv2.dnn.image2blobparams method)": [[1, "cv2.dnn.Image2BlobParams.blobRectToImageRect"]], "blobrectstoimagerects() (cv2.dnn.image2blobparams method)": [[1, "cv2.dnn.Image2BlobParams.blobRectsToImageRects"]], "blobs (cv2.dnn.layer attribute)": [[1, "cv2.dnn.Layer.blobs"]], "bordervalue (cv2.dnn.image2blobparams attribute)": [[1, "cv2.dnn.Image2BlobParams.borderValue"]], "classify() (cv2.dnn.classificationmodel method)": [[1, "cv2.dnn.ClassificationModel.classify"], [1, "id1"]], "connect() (cv2.dnn.net method)": [[1, "cv2.dnn.Net.connect"]], "cv2.dnn": [[1, "module-cv2.dnn"]], "datalayout (cv2.dnn.image2blobparams attribute)": [[1, "cv2.dnn.Image2BlobParams.datalayout"]], "ddepth (cv2.dnn.image2blobparams attribute)": [[1, "cv2.dnn.Image2BlobParams.ddepth"]], "detect() (cv2.dnn.detectionmodel method)": [[1, "cv2.dnn.DetectionModel.detect"], [1, "id3"]], "detect() (cv2.dnn.textdetectionmodel method)": [[1, "cv2.dnn.TextDetectionModel.detect"], [1, "id32"], [1, "id33"], [1, "id34"]], "detecttextrectangles() (cv2.dnn.textdetectionmodel method)": [[1, "cv2.dnn.TextDetectionModel.detectTextRectangles"], [1, "id35"], [1, "id36"], [1, "id37"]], "dump() (cv2.dnn.net method)": [[1, "cv2.dnn.Net.dump"]], "dumptofile() (cv2.dnn.net method)": [[1, "cv2.dnn.Net.dumpToFile"]], "empty() (cv2.dnn.net method)": [[1, "cv2.dnn.Net.empty"]], "enablefusion() (cv2.dnn.net method)": [[1, "cv2.dnn.Net.enableFusion"]], "enablewinograd() (cv2.dnn.model method)": [[1, "cv2.dnn.Model.enableWinograd"]], "enablewinograd() (cv2.dnn.net method)": [[1, "cv2.dnn.Net.enableWinograd"]], "estimate() (cv2.dnn.keypointsmodel method)": [[1, "cv2.dnn.KeypointsModel.estimate"], [1, "id8"]], "finalize() (cv2.dnn.layer method)": [[1, "cv2.dnn.Layer.finalize"], [1, "id9"]], "forward() (cv2.dnn.net method)": [[1, "cv2.dnn.Net.forward"], [1, "id16"], [1, "id17"], [1, "id18"], [1, "id19"]], "forwardandretrieve() (cv2.dnn.net method)": [[1, "cv2.dnn.Net.forwardAndRetrieve"]], "forwardasync() (cv2.dnn.net method)": [[1, "cv2.dnn.Net.forwardAsync"]], "getavailabletargets() (in module cv2.dnn)": [[1, "cv2.dnn.getAvailableTargets"]], "getbinarythreshold() (cv2.dnn.textdetectionmodel_db method)": [[1, "cv2.dnn.TextDetectionModel_DB.getBinaryThreshold"]], "getconfidencethreshold() (cv2.dnn.textdetectionmodel_east method)": [[1, "cv2.dnn.TextDetectionModel_EAST.getConfidenceThreshold"]], "getdecodetype() (cv2.dnn.textrecognitionmodel method)": [[1, "cv2.dnn.TextRecognitionModel.getDecodeType"]], "getenablesoftmaxpostprocessing() (cv2.dnn.classificationmodel method)": [[1, "cv2.dnn.ClassificationModel.getEnableSoftmaxPostProcessing"]], "getflops() (cv2.dnn.net method)": [[1, "cv2.dnn.Net.getFLOPS"], [1, "id25"], [1, "id26"], [1, "id27"]], "getinputdetails() (cv2.dnn.net method)": [[1, "cv2.dnn.Net.getInputDetails"]], "getintvalue() (cv2.dnn.dictvalue method)": [[1, "cv2.dnn.DictValue.getIntValue"]], "getlayer() (cv2.dnn.net method)": [[1, "cv2.dnn.Net.getLayer"], [1, "id14"], [1, "id15"]], "getlayerid() (cv2.dnn.net method)": [[1, "cv2.dnn.Net.getLayerId"]], "getlayernames() (cv2.dnn.net method)": [[1, "cv2.dnn.Net.getLayerNames"]], "getlayertypes() (cv2.dnn.net method)": [[1, "cv2.dnn.Net.getLayerTypes"]], "getlayerscount() (cv2.dnn.net method)": [[1, "cv2.dnn.Net.getLayersCount"]], "getlayersshapes() (cv2.dnn.net method)": [[1, "cv2.dnn.Net.getLayersShapes"], [1, "id24"]], "getmaxcandidates() (cv2.dnn.textdetectionmodel_db method)": [[1, "cv2.dnn.TextDetectionModel_DB.getMaxCandidates"]], "getmemoryconsumption() (cv2.dnn.net method)": [[1, "cv2.dnn.Net.getMemoryConsumption"], [1, "id28"], [1, "id29"]], "getnmsthreshold() (cv2.dnn.textdetectionmodel_east method)": [[1, "cv2.dnn.TextDetectionModel_EAST.getNMSThreshold"]], "getnmsacrossclasses() (cv2.dnn.detectionmodel method)": [[1, "cv2.dnn.DetectionModel.getNmsAcrossClasses"]], "getoutputdetails() (cv2.dnn.net method)": [[1, "cv2.dnn.Net.getOutputDetails"]], "getparam() (cv2.dnn.net method)": [[1, "cv2.dnn.Net.getParam"], [1, "id23"]], "getperfprofile() (cv2.dnn.net method)": [[1, "cv2.dnn.Net.getPerfProfile"]], "getpolygonthreshold() (cv2.dnn.textdetectionmodel_db method)": [[1, "cv2.dnn.TextDetectionModel_DB.getPolygonThreshold"]], "getrealvalue() (cv2.dnn.dictvalue method)": [[1, "cv2.dnn.DictValue.getRealValue"]], "getstringvalue() (cv2.dnn.dictvalue method)": [[1, "cv2.dnn.DictValue.getStringValue"]], "getunclipratio() (cv2.dnn.textdetectionmodel_db method)": [[1, "cv2.dnn.TextDetectionModel_DB.getUnclipRatio"]], "getunconnectedoutlayers() (cv2.dnn.net method)": [[1, "cv2.dnn.Net.getUnconnectedOutLayers"]], "getunconnectedoutlayersnames() (cv2.dnn.net method)": [[1, "cv2.dnn.Net.getUnconnectedOutLayersNames"]], "getvocabulary() (cv2.dnn.textrecognitionmodel method)": [[1, "cv2.dnn.TextRecognitionModel.getVocabulary"]], "imagesfromblob() (in module cv2.dnn)": [[1, "cv2.dnn.imagesFromBlob"]], "isint() (cv2.dnn.dictvalue method)": [[1, "cv2.dnn.DictValue.isInt"]], "isreal() (cv2.dnn.dictvalue method)": [[1, "cv2.dnn.DictValue.isReal"]], "isstring() (cv2.dnn.dictvalue method)": [[1, "cv2.dnn.DictValue.isString"]], "mean (cv2.dnn.image2blobparams attribute)": [[1, "cv2.dnn.Image2BlobParams.mean"]], "name() (cv2.dnn.layer method)": [[1, "cv2.dnn.Layer.name"]], "outputnametoindex() (cv2.dnn.layer method)": [[1, "cv2.dnn.Layer.outputNameToIndex"]], "paddingmode (cv2.dnn.image2blobparams attribute)": [[1, "cv2.dnn.Image2BlobParams.paddingmode"]], "predict() (cv2.dnn.model method)": [[1, "cv2.dnn.Model.predict"], [1, "id12"]], "preferabletarget() (cv2.dnn.layer method)": [[1, "cv2.dnn.Layer.preferableTarget"]], "quantize() (cv2.dnn.net method)": [[1, "cv2.dnn.Net.quantize"], [1, "id20"]], "readfrommodeloptimizer() (cv2.dnn.net class method)": [[1, "cv2.dnn.Net.readFromModelOptimizer"], [1, "id13"]], "readnet() (in module cv2.dnn)": [[1, "cv2.dnn.readNet"]], "readnetfromcaffe() (in module cv2.dnn)": [[1, "cv2.dnn.readNetFromCaffe"]], "readnetfromdarknet() (in module cv2.dnn)": [[1, "cv2.dnn.readNetFromDarknet"]], "readnetfrommodeloptimizer() (in module cv2.dnn)": [[1, "cv2.dnn.readNetFromModelOptimizer"]], "readnetfromonnx() (in module cv2.dnn)": [[1, "cv2.dnn.readNetFromONNX"]], "readnetfromtflite() (in module cv2.dnn)": [[1, "cv2.dnn.readNetFromTFLite"]], "readnetfromtensorflow() (in module cv2.dnn)": [[1, "cv2.dnn.readNetFromTensorflow"]], "readnetfromtorch() (in module cv2.dnn)": [[1, "cv2.dnn.readNetFromTorch"]], "readtensorfromonnx() (in module cv2.dnn)": [[1, "cv2.dnn.readTensorFromONNX"]], "readtorchblob() (in module cv2.dnn)": [[1, "cv2.dnn.readTorchBlob"]], "recognize() (cv2.dnn.textrecognitionmodel method)": [[1, "cv2.dnn.TextRecognitionModel.recognize"], [1, "id41"], [1, "id42"], [1, "id43"]], "run() (cv2.dnn.layer method)": [[1, "cv2.dnn.Layer.run"]], "scalefactor (cv2.dnn.image2blobparams attribute)": [[1, "cv2.dnn.Image2BlobParams.scalefactor"]], "segment() (cv2.dnn.segmentationmodel method)": [[1, "cv2.dnn.SegmentationModel.segment"], [1, "id31"]], "setbinarythreshold() (cv2.dnn.textdetectionmodel_db method)": [[1, "cv2.dnn.TextDetectionModel_DB.setBinaryThreshold"]], "setconfidencethreshold() (cv2.dnn.textdetectionmodel_east method)": [[1, "cv2.dnn.TextDetectionModel_EAST.setConfidenceThreshold"]], "setdecodeoptsctcprefixbeamsearch() (cv2.dnn.textrecognitionmodel method)": [[1, "cv2.dnn.TextRecognitionModel.setDecodeOptsCTCPrefixBeamSearch"]], "setdecodetype() (cv2.dnn.textrecognitionmodel method)": [[1, "cv2.dnn.TextRecognitionModel.setDecodeType"]], "setenablesoftmaxpostprocessing() (cv2.dnn.classificationmodel method)": [[1, "cv2.dnn.ClassificationModel.setEnableSoftmaxPostProcessing"]], "sethalidescheduler() (cv2.dnn.net method)": [[1, "cv2.dnn.Net.setHalideScheduler"]], "setinput() (cv2.dnn.net method)": [[1, "cv2.dnn.Net.setInput"], [1, "id21"]], "setinputcrop() (cv2.dnn.model method)": [[1, "cv2.dnn.Model.setInputCrop"]], "setinputmean() (cv2.dnn.model method)": [[1, "cv2.dnn.Model.setInputMean"]], "setinputparams() (cv2.dnn.model method)": [[1, "cv2.dnn.Model.setInputParams"]], "setinputscale() (cv2.dnn.model method)": [[1, "cv2.dnn.Model.setInputScale"]], "setinputshape() (cv2.dnn.net method)": [[1, "cv2.dnn.Net.setInputShape"]], "setinputsize() (cv2.dnn.model method)": [[1, "cv2.dnn.Model.setInputSize"], [1, "id11"]], "setinputswaprb() (cv2.dnn.model method)": [[1, "cv2.dnn.Model.setInputSwapRB"]], "setinputsnames() (cv2.dnn.net method)": [[1, "cv2.dnn.Net.setInputsNames"]], "setmaxcandidates() (cv2.dnn.textdetectionmodel_db method)": [[1, "cv2.dnn.TextDetectionModel_DB.setMaxCandidates"]], "setnmsthreshold() (cv2.dnn.textdetectionmodel_east method)": [[1, "cv2.dnn.TextDetectionModel_EAST.setNMSThreshold"]], "setnmsacrossclasses() (cv2.dnn.detectionmodel method)": [[1, "cv2.dnn.DetectionModel.setNmsAcrossClasses"]], "setparam() (cv2.dnn.net method)": [[1, "cv2.dnn.Net.setParam"], [1, "id22"]], "setpolygonthreshold() (cv2.dnn.textdetectionmodel_db method)": [[1, "cv2.dnn.TextDetectionModel_DB.setPolygonThreshold"]], "setpreferablebackend() (cv2.dnn.model method)": [[1, "cv2.dnn.Model.setPreferableBackend"]], "setpreferablebackend() (cv2.dnn.net method)": [[1, "cv2.dnn.Net.setPreferableBackend"]], "setpreferabletarget() (cv2.dnn.model method)": [[1, "cv2.dnn.Model.setPreferableTarget"]], "setpreferabletarget() (cv2.dnn.net method)": [[1, "cv2.dnn.Net.setPreferableTarget"]], "setunclipratio() (cv2.dnn.textdetectionmodel_db method)": [[1, "cv2.dnn.TextDetectionModel_DB.setUnclipRatio"]], "setvocabulary() (cv2.dnn.textrecognitionmodel method)": [[1, "cv2.dnn.TextRecognitionModel.setVocabulary"]], "shrinkcaffemodel() (in module cv2.dnn)": [[1, "cv2.dnn.shrinkCaffeModel"]], "size (cv2.dnn.image2blobparams attribute)": [[1, "cv2.dnn.Image2BlobParams.size"]], "softnmsboxes() (in module cv2.dnn)": [[1, "cv2.dnn.softNMSBoxes"]], "swaprb (cv2.dnn.image2blobparams attribute)": [[1, "cv2.dnn.Image2BlobParams.swapRB"]], "type() (cv2.dnn.layer method)": [[1, "cv2.dnn.Layer.type"]], "writetextgraph() (in module cv2.dnn)": [[1, "cv2.dnn.writeTextGraph"]]}})